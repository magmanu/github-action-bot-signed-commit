on:
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  test-action:
    runs-on: ubuntu-latest
    name: Commit with bot verified commit
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create list of files to sign
        run: |
          git fetch origin qa
          echo "$(git diff --name-only origin/qa...HEAD)" > file_list.txt
          cat file_list.txt

      - name: Test action
        id: test
        uses: ./
        with:
          TARGET_REF: qa
          FILE_LIST: file_list.txt

      - name: Validate commit
        env:
          GH_TOKEN: ${{ github.token }}
          SHA: ${{ steps.test.outputs.sha }}
          TARGET_REF: qa
        run: |
          # Get the latest commit SHA from the target branch
          latest_commit_sha=$(gh api repos/${{ github.repository }}/git/ref/heads/$TARGET_REF --jq '.object.sha')
          
          if [[ "$latest_commit_sha" == "$SHA" ]]; then
            echo "The commit was succesfully pushed to the target ref."
          else
            echo "Failure to push the commit to the target ref."
            exit 1
          fi

          response=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/commits/$SHA)

          verified=$(echo "$response" | jq -r '.commit.verification.verified')
          reason=$(echo "$response" | jq -r '.commit.verification.reason')

          if [ "$verified" == "true" ]; then
            echo "Commit $SHA is verified."
          else
            echo "Commit $SHA is NOT verified. Reason: $reason"
          fi
